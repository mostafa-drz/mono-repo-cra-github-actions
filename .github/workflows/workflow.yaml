name: first-app
on: push

jobs:
  tag:
    runs-on: ubuntu-latest
    steps:
      - run: ./scripts/tag.js
  first-app:
    needs: [tag]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./first-app
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: yarn install --frozen-lockfile
      - run: CI=true yarn test
      - run: yarn run build
      - uses: actions/upload-artifact@master
        with:
          name: first-app
          path: ./first-app/build
  second-app:
    needs: [tag]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./second-app
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: yarn install --frozen-lockfile
      - run: CI=true yarn test
      - run: yarn run build
      - uses: actions/upload-artifact@master
        with:
          name: second-app
          path: ./second-app/build
  third-app:
    needs: [tag]
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./third-app
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - run: yarn install --frozen-lockfile
      - run: CI=true yarn test
      - run: yarn run build
      - uses: actions/upload-artifact@master
        with:
          name: third-app
          path: ./third-app/build
  build-push-image:
    runs-on: ubuntu-latest
    needs: [first-app, second-app, third-app]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
      - name: AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1
      - name: Login to AWS ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build, tag, push image to AWS ECR
        env:
          ECR_REGISTRY: ${{ steps.ecr-login.outputs.registry }}
          ECR_REPOSITORY: test-ga
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
